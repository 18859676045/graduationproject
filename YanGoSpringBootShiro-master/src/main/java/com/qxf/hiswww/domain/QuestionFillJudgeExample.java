package com.qxf.hiswww.domain;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class QuestionFillJudgeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public QuestionFillJudgeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public QuestionFillJudgeExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public QuestionFillJudgeExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        QuestionFillJudgeExample example = new QuestionFillJudgeExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public QuestionFillJudgeExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public QuestionFillJudgeExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCreateIdIsNull() {
            addCriterion("create_id is null");
            return (Criteria) this;
        }

        public Criteria andCreateIdIsNotNull() {
            addCriterion("create_id is not null");
            return (Criteria) this;
        }

        public Criteria andCreateIdEqualTo(String value) {
            addCriterion("create_id =", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdNotEqualTo(String value) {
            addCriterion("create_id <>", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdGreaterThan(String value) {
            addCriterion("create_id >", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdGreaterThanOrEqualTo(String value) {
            addCriterion("create_id >=", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdLessThan(String value) {
            addCriterion("create_id <", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdLessThanOrEqualTo(String value) {
            addCriterion("create_id <=", value, "createId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateIdLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateIdLike(String value) {
            addCriterion("create_id like", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotLike(String value) {
            addCriterion("create_id not like", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdIn(List<String> values) {
            addCriterion("create_id in", values, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotIn(List<String> values) {
            addCriterion("create_id not in", values, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdBetween(String value1, String value2) {
            addCriterion("create_id between", value1, value2, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotBetween(String value1, String value2) {
            addCriterion("create_id not between", value1, value2, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDate value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDate value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDate value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDate value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDate value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDate> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDate> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNull() {
            addCriterion("update_id is null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNotNull() {
            addCriterion("update_id is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdEqualTo(String value) {
            addCriterion("update_id =", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotEqualTo(String value) {
            addCriterion("update_id <>", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThan(String value) {
            addCriterion("update_id >", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThanOrEqualTo(String value) {
            addCriterion("update_id >=", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThan(String value) {
            addCriterion("update_id <", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThanOrEqualTo(String value) {
            addCriterion("update_id <=", value, "updateId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateIdLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateIdLike(String value) {
            addCriterion("update_id like", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotLike(String value) {
            addCriterion("update_id not like", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIn(List<String> values) {
            addCriterion("update_id in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotIn(List<String> values) {
            addCriterion("update_id not in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdBetween(String value1, String value2) {
            addCriterion("update_id between", value1, value2, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotBetween(String value1, String value2) {
            addCriterion("update_id not between", value1, value2, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDate value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDate value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDate value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDate value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDate value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDate> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDate> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDate value1, LocalDate value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andQuestionContentIsNull() {
            addCriterion("question_content is null");
            return (Criteria) this;
        }

        public Criteria andQuestionContentIsNotNull() {
            addCriterion("question_content is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionContentEqualTo(String value) {
            addCriterion("question_content =", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentNotEqualTo(String value) {
            addCriterion("question_content <>", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentGreaterThan(String value) {
            addCriterion("question_content >", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentGreaterThanOrEqualTo(String value) {
            addCriterion("question_content >=", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentLessThan(String value) {
            addCriterion("question_content <", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentLessThanOrEqualTo(String value) {
            addCriterion("question_content <=", value, "questionContent");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionContentLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_content <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionContentLike(String value) {
            addCriterion("question_content like", value, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionContentNotLike(String value) {
            addCriterion("question_content not like", value, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionContentIn(List<String> values) {
            addCriterion("question_content in", values, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionContentNotIn(List<String> values) {
            addCriterion("question_content not in", values, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionContentBetween(String value1, String value2) {
            addCriterion("question_content between", value1, value2, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionContentNotBetween(String value1, String value2) {
            addCriterion("question_content not between", value1, value2, "questionContent");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerIsNull() {
            addCriterion("question_answer is null");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerIsNotNull() {
            addCriterion("question_answer is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerEqualTo(String value) {
            addCriterion("question_answer =", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerNotEqualTo(String value) {
            addCriterion("question_answer <>", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerGreaterThan(String value) {
            addCriterion("question_answer >", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerGreaterThanOrEqualTo(String value) {
            addCriterion("question_answer >=", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerLessThan(String value) {
            addCriterion("question_answer <", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerLessThanOrEqualTo(String value) {
            addCriterion("question_answer <=", value, "questionAnswer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionAnswerLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_answer <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerLike(String value) {
            addCriterion("question_answer like", value, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerNotLike(String value) {
            addCriterion("question_answer not like", value, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerIn(List<String> values) {
            addCriterion("question_answer in", values, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerNotIn(List<String> values) {
            addCriterion("question_answer not in", values, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerBetween(String value1, String value2) {
            addCriterion("question_answer between", value1, value2, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionAnswerNotBetween(String value1, String value2) {
            addCriterion("question_answer not between", value1, value2, "questionAnswer");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainIsNull() {
            addCriterion("question_explain is null");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainIsNotNull() {
            addCriterion("question_explain is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainEqualTo(String value) {
            addCriterion("question_explain =", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainNotEqualTo(String value) {
            addCriterion("question_explain <>", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainGreaterThan(String value) {
            addCriterion("question_explain >", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainGreaterThanOrEqualTo(String value) {
            addCriterion("question_explain >=", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainLessThan(String value) {
            addCriterion("question_explain <", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainLessThanOrEqualTo(String value) {
            addCriterion("question_explain <=", value, "questionExplain");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionExplainLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_explain <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionExplainLike(String value) {
            addCriterion("question_explain like", value, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainNotLike(String value) {
            addCriterion("question_explain not like", value, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainIn(List<String> values) {
            addCriterion("question_explain in", values, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainNotIn(List<String> values) {
            addCriterion("question_explain not in", values, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainBetween(String value1, String value2) {
            addCriterion("question_explain between", value1, value2, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionExplainNotBetween(String value1, String value2) {
            addCriterion("question_explain not between", value1, value2, "questionExplain");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreIsNull() {
            addCriterion("question_score is null");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreIsNotNull() {
            addCriterion("question_score is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreEqualTo(String value) {
            addCriterion("question_score =", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreNotEqualTo(String value) {
            addCriterion("question_score <>", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreGreaterThan(String value) {
            addCriterion("question_score >", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreGreaterThanOrEqualTo(String value) {
            addCriterion("question_score >=", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreLessThan(String value) {
            addCriterion("question_score <", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreLessThanOrEqualTo(String value) {
            addCriterion("question_score <=", value, "questionScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionScoreLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_score <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionScoreLike(String value) {
            addCriterion("question_score like", value, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreNotLike(String value) {
            addCriterion("question_score not like", value, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreIn(List<String> values) {
            addCriterion("question_score in", values, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreNotIn(List<String> values) {
            addCriterion("question_score not in", values, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreBetween(String value1, String value2) {
            addCriterion("question_score between", value1, value2, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionScoreNotBetween(String value1, String value2) {
            addCriterion("question_score not between", value1, value2, "questionScore");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelIsNull() {
            addCriterion("question_level is null");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelIsNotNull() {
            addCriterion("question_level is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelEqualTo(String value) {
            addCriterion("question_level =", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelNotEqualTo(String value) {
            addCriterion("question_level <>", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelGreaterThan(String value) {
            addCriterion("question_level >", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelGreaterThanOrEqualTo(String value) {
            addCriterion("question_level >=", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelLessThan(String value) {
            addCriterion("question_level <", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelLessThanOrEqualTo(String value) {
            addCriterion("question_level <=", value, "questionLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionLevelLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionLevelLike(String value) {
            addCriterion("question_level like", value, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelNotLike(String value) {
            addCriterion("question_level not like", value, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelIn(List<String> values) {
            addCriterion("question_level in", values, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelNotIn(List<String> values) {
            addCriterion("question_level not in", values, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelBetween(String value1, String value2) {
            addCriterion("question_level between", value1, value2, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionLevelNotBetween(String value1, String value2) {
            addCriterion("question_level not between", value1, value2, "questionLevel");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectIsNull() {
            addCriterion("question_subject is null");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectIsNotNull() {
            addCriterion("question_subject is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectEqualTo(String value) {
            addCriterion("question_subject =", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectNotEqualTo(String value) {
            addCriterion("question_subject <>", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectGreaterThan(String value) {
            addCriterion("question_subject >", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectGreaterThanOrEqualTo(String value) {
            addCriterion("question_subject >=", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectLessThan(String value) {
            addCriterion("question_subject <", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectLessThanOrEqualTo(String value) {
            addCriterion("question_subject <=", value, "questionSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionSubjectLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_subject <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectLike(String value) {
            addCriterion("question_subject like", value, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectNotLike(String value) {
            addCriterion("question_subject not like", value, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectIn(List<String> values) {
            addCriterion("question_subject in", values, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectNotIn(List<String> values) {
            addCriterion("question_subject not in", values, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectBetween(String value1, String value2) {
            addCriterion("question_subject between", value1, value2, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionSubjectNotBetween(String value1, String value2) {
            addCriterion("question_subject not between", value1, value2, "questionSubject");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNull() {
            addCriterion("question_type is null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNotNull() {
            addCriterion("question_type is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeEqualTo(Integer value) {
            addCriterion("question_type =", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotEqualTo(Integer value) {
            addCriterion("question_type <>", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeNotEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThan(Integer value) {
            addCriterion("question_type >", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeGreaterThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("question_type >=", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeGreaterThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThan(Integer value) {
            addCriterion("question_type <", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeLessThanColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThanOrEqualTo(Integer value) {
            addCriterion("question_type <=", value, "questionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria andQuestionTypeLessThanOrEqualToColumn(QuestionFillJudge.Column column) {
            addCriterion(new StringBuilder("question_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIn(List<Integer> values) {
            addCriterion("question_type in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotIn(List<Integer> values) {
            addCriterion("question_type not in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeBetween(Integer value1, Integer value2) {
            addCriterion("question_type between", value1, value2, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("question_type not between", value1, value2, "questionType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_fill_judge
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        private QuestionFillJudgeExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        protected Criteria(QuestionFillJudgeExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public QuestionFillJudgeExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table question_fill_judge
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_fill_judge
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_fill_judge
         *
         * @mbg.generated
         */
        void example(com.qxf.hiswww.domain.QuestionFillJudgeExample example);
    }
}